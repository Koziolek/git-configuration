[alias]
    fun = "! bash \"$GIT_FUNCTIONS\""
    i  = fun git_init
    st = status
    ci = commit
    br = branch
    co = checkout
    cl = clone
    df = diff
    lg = log -p
    rbc = rebase --continue
    rba = rebase --abort
    who = shortlog -s --
    push-upstream = !BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD) && git push -u origin $BRANCH_NAME
    slow-merge = merge --no-commit --no-ff
    single-push = !BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD) && git push origin $BRANCH_NAME
    new-branch = checkout -b
    delete-branch = branch -D
    origin-info = remote show origin
    log-oneline = log --pretty=oneline
    log-withtime = log --pretty=format:'%h - %an, %ar : %s'
    count-commits = shortlog -s -n
    unstage = reset HEAD
    compress = gc --prune=now
    lasttag = describe --tags --abbrev=0 #ostatni tag
    cm = checkout master
    rh = reset --hard
    cln = clean -d -f
    ss = stash save
    sa = stash apply
    la = config --get-regexp alias # la od 'list aliases'
    nb = fun git_new_feature_branch
    nv = fun git_new_version_branch
    nf = fun git_new_fix_branch
    ne = fun git_new_experimental_branch
    mrg = "!f() { B_NAME=`git rev-parse --abbrev-ref HEAD`; git co $1; git pull; git co $B_NAME; git merge $1; }; f"
    go = "!f(){  P_NAME=`git config project.name`; git co $1/$P_NAME-$2; }; f"
    #vomit = "!f() { B_NAME=`git rev-parse --abbrev-ref HEAD`; git ci -a -m \"$1\" && git push -u origin $B_NAME;}; f"
    vomit = fun git_vomit
    mgo = "! f(){ B_NAME=`git rev-parse --abbrev-ref HEAD`; P_NAME=`git config project.name`; git co feature/$P_NAME-\"$1\" ; git merge --no-edit $B_NAME;}; f"
    fuck = reset --soft HEAD~
    lsd = log --oneline --graph --decorate
    p = pull --prune
    exterminatus = fun git_exterminatus
    home = fun git_home
    clean-home = "! git home && git exterminatus"
    cbr= fun git_current_branch
    merge-hub= fun hub_merge_pr
