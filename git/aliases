[alias]
        st = status
        ci = commit
        br = branch
        co = checkout
        df = diff
        lg = log -p
        who = shortlog -s --
        push-upstream = !BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD) && git push -u origin $BRANCH_NAME
        slow-merge = merge --no-commit --no-ff
        single-push = !BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD) && git push origin $BRANCH_NAME
        new-branch = checkout -b
        delete-branch = branch -D
        origin-info = remote show origin
        log-oneline = log --pretty=oneline
        log-withtime = log --pretty=format:'%h - %an, %ar : %s'
        count-commits = shortlog -s -n
        unstage = reset HEAD
        compress = gc --prune=now
        lasttag = describe --tags --abbrev=0 #ostatni tag
        cm = checkout master
        rh = reset --hard
        cl = clean -d -f
        ss = stash save
        sa = stash apply
        la = config --get-regexp alias # la od 'list aliases'
	nb = "!f() { P_NAME=`git config project.name`; git pull; git co -b feature/$P_NAME-$1 ; git push -u origin feature/$P_NAME-$1;}; f"
	nv = "!f() { P_NAME=`git config project.name`; git pull; git co -b version/$P_NAME-$1 ; git push -u origin version/$P_NAME-$1;}; f"
	ne = "!f() { P_NAME=`git config project.name`; git pull; git co -b experimental/$P_NAME-$1 ; git push -u origin experimental/$P_NAME-$1;}; f"
	nf = "!f() { P_NAME=`git config project.name`; git pull; git co -b fix/$P_NAME-$1 ; git push -u origin fix/$P_NAME-$1;}; f"
	mrg = "!f() { B_NAME=`git rev-parse --abbrev-ref HEAD`; git co $1; git pull; git co $B_NAME; git merge $1; }; f"
        go = "!f(){  P_NAME=`git config project.name`; git co $1/$P_NAME-$2; }; f"
        vomit = "!f() { B_NAME=`git rev-parse --abbrev-ref HEAD`; git ci -a -m \"$1\" && git push -u origin $B_NAME;}; f"
        mgo = "! f(){ B_NAME=`git rev-parse --abbrev-ref HEAD`; P_NAME=`git config project.name`; git co feature/$P_NAME-\"$1\" ; git merge --no-edit $B_NAME;}; f"

