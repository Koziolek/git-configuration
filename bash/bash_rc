if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

source /usr/share/bash-completion/completions/git

complete -o bashdefault -o default -o nospace -F __git_wrap__git_main g 2>/dev/null \
  || complete -o default -o nospace -F __git_wrap__git_main g

. $HOME/.asdf/asdf.sh
. $HOME/.asdf/completions/asdf.bash

if command -f gigalixir &> /dev/null
then
  eval "$(_GIGALIXIR_COMPLETE=source gigalixir)"
fi

parse_git_branch() {
     git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
}
export PS1="\u@\h \[\033[32m\]\w\[\033[33m\]\$(parse_git_branch)\[\033[00m\] $ "
export PATH=$PATH:/opt/gradle/gradle-3.4.1/bin
if command -v tmux>/dev/null; then
  [[ ! $TERM =~ screen ]] && [ -z $TMUX ] && exec tmux
fi

eval "$(thefuck --alias)"

if [ "$XDG_SESSION_TYPE" = "X11" ]; then
  CURRENT_SIZE=$(echo $(xwininfo -id $(xdotool getactivewindow) -stats | egrep '(Width|Height):' | awk '{print $NF}') | sed -e 's/ /x/')
  MAX_SIZE=$(xrandr | egrep \\* | awk '{print $1}' | head -n 1)
  if [ "$CURRENT_SIZE" != "$MAX_SIZE" ]; then
     xdotool key F11
  fi
fi

neofetch --ascii $HOME/.git-configuration/logo-ascii-art.txt

export PRINTER='L6170'

function make_me_sudo () {
  export SUDO=''
  export RESET_SUDO=0
  if (( $EUID != 0 )); then
     SUDO='sudo'
     RESET_SUDO=1
  fi
  return 0
}

function unmake_me_sudo () {
  if (( $RESET_SUDO !=0 )); then
      $SUDO -K
  fi
  unset SUDO
  unset RESET_SUDO
}

export -f make_me_sudo
export -f unmake_me_sudo

function order66 () {
  ps aux | grep $1 | awk '{print $2}' | xargs kill -9
}

export -f order66

export GIT_SCRIPTS_DIR=~/.git-configuration/git/git_helpers.sh

#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="/home/koziolek/.sdkman"
[[ -s "/home/koziolek/.sdkman/bin/sdkman-init.sh" ]] && source "/home/koziolek/.sdkman/bin/sdkman-init.sh"
source $HOME/.maven-bash-completion/bash_completion.bash
source $MVND_HOME/bin/mvnd-bash-completion.bash

